version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_SKIP_TS_CHECK=true
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://backend:8000
      - VITE_SKIP_TS_CHECK=true
    networks:
      admin_net:
        ipv4_address: 10.10.10.220
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
      - /etc/wireguard:/etc/wireguard:ro
    user: root
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - HOST=0.0.0.0
      - PORT=8000
      - CORS_ORIGINS=["http://frontend:3000"]
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/wireguard
    networks:
      admin_net:
        ipv4_address: 10.10.10.221
    depends_on:
      - db
    restart: always

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=wireguard
    networks:
      admin_net:
        ipv4_address: 10.10.10.222

networks:
  admin_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.10.10.0/24

volumes:
  postgres_data:
    driver: local 